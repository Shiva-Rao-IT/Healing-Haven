{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Downloads\\\\project\\\\src\\\\components\\\\cta.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./cta.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CTA = props => {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thq-section-padding\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thq-section-max-width\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cta-accent2-bg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cta-accent1-bg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cta-container2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cta-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"thq-heading-2\",\n                children: props.heading1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"thq-body-large\",\n                children: props.content1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cta-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"thq-button-filled cta-button\",\n                onClick: () => {\n                  if (location.pathname.startsWith(\"/login\")) {\n                    history.push(\"/login/service\");\n                  } else {\n                    history.push(\"/service\");\n                  }\n                  window.scrollTo(0, 0);\n                },\n                children: props.action1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(CTA, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n_c = CTA;\nCTA.defaultProps = {\n  heading1: \"Start your journey towards healing and growth\",\n  content1: \"Take the first step towards a healthier mind and a happier life. Contact us today to schedule your initial consultation.\",\n  action1: \"Schedule a Consultation\"\n};\nCTA.propTypes = {\n  heading1: PropTypes.string,\n  content1: PropTypes.string,\n  action1: PropTypes.string\n};\nexport default CTA;\nvar _c;\n$RefreshReg$(_c, \"CTA\");","map":{"version":3,"names":["React","useHistory","useLocation","PropTypes","jsxDEV","_jsxDEV","CTA","props","_s","history","location","className","children","heading1","fileName","_jsxFileName","lineNumber","columnNumber","content1","type","onClick","pathname","startsWith","push","window","scrollTo","action1","_c","defaultProps","propTypes","string","$RefreshReg$"],"sources":["C:/Users/shiva/Downloads/project/src/components/cta.js"],"sourcesContent":["import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport \"./cta.css\";\n\nconst CTA = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  return (\n    <div className=\"thq-section-padding\">\n      <div className=\"thq-section-max-width\">\n        <div className=\"cta-accent2-bg\">\n          <div className=\"cta-accent1-bg\">\n            <div className=\"cta-container2\">\n              <div className=\"cta-content\">\n                <span className=\"thq-heading-2\">{props.heading1}</span>\n                <p className=\"thq-body-large\">{props.content1}</p>\n              </div>\n              <div className=\"cta-actions\">\n                <button\n                  type=\"button\"\n                  className=\"thq-button-filled cta-button\"\n                  onClick={() => {\n                    if (location.pathname.startsWith(\"/login\")) {\n                      history.push(\"/login/service\");\n                    } else {\n                      history.push(\"/service\");\n                    }\n                    window.scrollTo(0, 0);\n                  }}\n                >\n                  {props.action1}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCTA.defaultProps = {\n  heading1: \"Start your journey towards healing and growth\",\n  content1:\n    \"Take the first step towards a healthier mind and a happier life. Contact us today to schedule your initial consultation.\",\n  action1: \"Schedule a Consultation\",\n};\n\nCTA.propTypes = {\n  heading1: PropTypes.string,\n  content1: PropTypes.string,\n  action1: PropTypes.string,\n};\n\nexport default CTA;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}