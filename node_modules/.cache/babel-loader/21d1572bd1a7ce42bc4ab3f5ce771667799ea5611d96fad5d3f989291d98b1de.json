{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Downloads\\\\project\\\\src\\\\views\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport \"./chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\"); // or your backend URL\n\nconst ChatRoom = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [message, setMessage] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const sendMessage = () => {\n    if (message.trim() !== \"\") {\n      const msgData = {\n        room: roomId,\n        author: \"User\",\n        message: message,\n        time: new Date().toLocaleTimeString()\n      };\n      socket.emit(\"send_message\", msgData);\n      setChatLog(prev => [...prev, msgData]);\n      setMessage(\"\");\n    }\n  };\n  useEffect(() => {\n    socket.emit(\"join_room\", roomId);\n    socket.on(\"receive_message\", data => {\n      setChatLog(prev => [...prev, data]);\n    });\n    return () => {\n      socket.off(\"receive_message\");\n    };\n  }, [roomId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: chatLog.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), \": \", msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: msg.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        placeholder: \"Type a message...\",\n        onChange: e => setMessage(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"//28yjPhE3kxFwV91JYpjkTR//0=\", false, function () {\n  return [useParams];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","useParams","io","jsxDEV","_jsxDEV","socket","ChatRoom","_s","roomId","message","setMessage","chatLog","setChatLog","sendMessage","trim","msgData","room","author","time","Date","toLocaleTimeString","emit","prev","on","data","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","type","value","placeholder","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Downloads/project/src/views/chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { io } from \"socket.io-client\";\r\nimport \"./chat.css\";\r\n\r\nconst socket = io(\"http://localhost:5000\"); // or your backend URL\r\n\r\nconst ChatRoom = () => {\r\n  const { roomId } = useParams();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chatLog, setChatLog] = useState([]);\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim() !== \"\") {\r\n      const msgData = {\r\n        room: roomId,\r\n        author: \"User\",\r\n        message: message,\r\n        time: new Date().toLocaleTimeString(),\r\n      };\r\n      socket.emit(\"send_message\", msgData);\r\n      setChatLog((prev) => [...prev, msgData]);\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join_room\", roomId);\r\n\r\n    socket.on(\"receive_message\", (data) => {\r\n      setChatLog((prev) => [...prev, data]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\");\r\n    };\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Chat Room: {roomId}</h2>\r\n      <div className=\"chat-box\">\r\n        {chatLog.map((msg, i) => (\r\n          <div key={i} className=\"chat-message\">\r\n            <strong>{msg.author}</strong>: {msg.message}\r\n            <span className=\"time\">{msg.time}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          placeholder=\"Type a message...\"\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}